/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface SuiBase {}
  interface SuiBox {
    /**
    * Responsive width
    */
    'width': string | string[];
  }
  interface SuiButton {
    /**
    * HTML element to use as basis
    */
    'as': string;
    /**
    * Background color
    */
    'color': string;
    /**
    * Is disabled?
    */
    'disabled': boolean;
    /**
    * Displays button as link
    */
    'href': string | undefined;
    /**
    * Specifies where to display the linked URL. Only applies when an `href` is provided. Special keywords: `"_blank"`, `"_self"`, `"_parent"`, `"_top"`.
    */
    'target': string | undefined;
    /**
    * Sets button content to this text
    */
    'text': string | undefined;
    /**
    * The button or input type (usually submit)
    */
    'type': "submit" | "reset" | "button";
    /**
    * Optional prop for input to show text
    */
    'value': string;
  }
}

declare global {


  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLSuiBaseElement extends Components.SuiBase, HTMLStencilElement {}
  var HTMLSuiBaseElement: {
    prototype: HTMLSuiBaseElement;
    new (): HTMLSuiBaseElement;
  };

  interface HTMLSuiBoxElement extends Components.SuiBox, HTMLStencilElement {}
  var HTMLSuiBoxElement: {
    prototype: HTMLSuiBoxElement;
    new (): HTMLSuiBoxElement;
  };

  interface HTMLSuiButtonElement extends Components.SuiButton, HTMLStencilElement {}
  var HTMLSuiButtonElement: {
    prototype: HTMLSuiButtonElement;
    new (): HTMLSuiButtonElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
    'sui-base': HTMLSuiBaseElement;
    'sui-box': HTMLSuiBoxElement;
    'sui-button': HTMLSuiButtonElement;
  }
}

declare namespace LocalJSX {
  interface MyComponent {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
  interface SuiBase {}
  interface SuiBox {
    /**
    * Responsive width
    */
    'width'?: string | string[];
  }
  interface SuiButton {
    /**
    * HTML element to use as basis
    */
    'as'?: string;
    /**
    * Background color
    */
    'color'?: string;
    /**
    * Is disabled?
    */
    'disabled'?: boolean;
    /**
    * Displays button as link
    */
    'href'?: string | undefined;
    /**
    * Specifies where to display the linked URL. Only applies when an `href` is provided. Special keywords: `"_blank"`, `"_self"`, `"_parent"`, `"_top"`.
    */
    'target'?: string | undefined;
    /**
    * Sets button content to this text
    */
    'text'?: string | undefined;
    /**
    * The button or input type (usually submit)
    */
    'type'?: "submit" | "reset" | "button";
    /**
    * Optional prop for input to show text
    */
    'value'?: string;
  }

  interface IntrinsicElements {
    'my-component': MyComponent;
    'sui-base': SuiBase;
    'sui-box': SuiBox;
    'sui-button': SuiButton;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
      'sui-base': LocalJSX.SuiBase & JSXBase.HTMLAttributes<HTMLSuiBaseElement>;
      'sui-box': LocalJSX.SuiBox & JSXBase.HTMLAttributes<HTMLSuiBoxElement>;
      'sui-button': LocalJSX.SuiButton & JSXBase.HTMLAttributes<HTMLSuiButtonElement>;
    }
  }
}


